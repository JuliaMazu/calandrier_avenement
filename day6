import re

#calculation of number of ways to bit the record
def ways(time_total, distance_to_beet):
  count = 0
  for time in range(time_total):
    time_to_swimm = time_total - time
    speed = time 
    distance = speed*time_to_swimm
    if distance > distance_to_beet:
      count +=1
  return count

#read the text and create appropriate format
def read_me(text):
  my_list = []
  time = list(map(int, re.findall('[0-9]+', re.findall('[0-9 ]+',text)[0].strip())))
  distance = list(map(int, re.findall('[0-9]+', re.findall('[0-9 ]+',text)[1].strip())))
  for i in range(len(time)):
    my_list.append([time[i], distance[i]])
  return my_list

#text input and calculation of final number
number = 1
for couple in read_me(input()):
  number *= ways(couple[0], couple[1])
print(number)

#2nd part
#change in the input function
def read_me(text):
  time = re.findall('[0-9 ]+', text)[0].replace(' ', '')
  distance = re.findall('[0-9 ]+', text)[1].replace(' ', '')
  my_list = [int(time), int(distance)]
  return my_list
read_me(input())

#function of ways counting rest without changes

#final count
my_number = read_me(input())
print(ways(my_number[0], my_number[1]))
